apiVersion: apps/v1 # for versions before 1.9.0 use apps/v1beta2
kind: Deployment
metadata:
  name: skiapp-deployment
  namespace: apps
spec:
  selector:
    matchLabels:
      app: "skiapp"
  replicas: 2 # tells deployment to run 2 pods matching the template
  template: # create pods using pod definition in this template
    metadata:
      # unlike pod-nginx.yaml, the name is not included in the meta data as a unique name is
      # generated from the deployment name
      labels:
        app: skiapp
    spec:
      containers:
      - name: skiapp
        image: sharepointoscar/skiapp:v1
        ports:
        - containerPort: 8080

---
apiVersion: v1
kind: Service
metadata:
  name: skiapp-svc
  namespace: apps
spec:
  selector:
    app: skiapp
  ports:
    - port: 80
      targetPort: 8080
      protocol: TCP
  type: NodePort


---
apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  name: skiapp-ingress
  namespace: apps
  annotations:
    kubernetes.io/ingress.class: alb
    alb.ingress.kubernetes.io/group.name: marketing
    alb.ingress.kubernetes.io/scheme: internet-facing
    alb.ingress.kubernetes.io/target-type: ip
    #alb.ingress.kubernetes.io/listen-ports: '[{"HTTP": 80}, {"HTTPS":443}]'
    #alb.ingress.kubernetes.io/actions.ssl-redirect: '{"Type": "redirect", "RedirectConfig": { "Protocol": "HTTPS", "Port": "443", "StatusCode": "HTTP_301"}}'
    alb.ingress.kubernetes.io/tags: Environment=dev,Team=Marketing

spec:
  rules:
  - host: skiapp.k8s.devopsoscar.dev
    http:
      paths:
      - path: /*
        backend:
          serviceName: skiapp-svc
          servicePort: 80